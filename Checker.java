import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

public class Checker {
	public static void mainScan(String website, String operatingSystem, String htmlClass) throws IOException {
		Document doc1 = Jsoup.connect(website).get();
		Elements files1 = doc1.select(htmlClass);
		ArrayList<String> text = new ArrayList<String>();

		Scanner reader = new Scanner(System.in);
		System.out.println("Would you like to see your result?");
		String input = reader.next();
		for (Element src1 : files1) {
			if (!src1.text().equals("Failed to load latest commit information.")) {
				String web = website + "/" + src1.text();
				Document doc2 = Jsoup.connect(web).get();
				Elements files2 = doc2.select("td.js-file-line");

				for (Element src2 : files2) {
					text.add(src2.text());
				}
			}
			if (input.equals("yes") || input.equals("y")) {
				for (int i = 0; i < text.size(); i++) {
					// TODO fix this so it only prints out cases with the correct operatingSystem
					//if (text.get(i).toLowerCase().contains(operatingSystem)) {
						for (int j = 0; j < text.size(); j++) {
							System.out.println(text.get(j));
						}
					//}
				}
			}
		}
		reader.close();
	}
	public static void main(String[] args) throws IOException {
		// list everything System.getProperties().list(System.out);
		// declares variables and prints to check
		String operatingSystem = System.getProperty("os.name");
		String cpu = System.getProperty("sun.cpu.isalist");
		String website = "";

		if (operatingSystem.toLowerCase().contains("mac")) {
			website = "https://github.com/offensive-security/exploit-database/tree/master/exploits/macos";
		} else if (cpu.toLowerCase().equals("amd64")) {
			if (operatingSystem.toLowerCase().contains("windows")) {
				website = "https://github.com/offensive-security/exploit-database/tree/master/exploits/windows_x86-64/local";
			} else if (operatingSystem.contains("linux")) {
				website = "https://github.com/offensive-security/exploit-database/tree/master/exploits/linux_x86-64";
			}
		} else if (operatingSystem.toLowerCase().equals("amd32")) { // whatever 32bit is
			if (operatingSystem.toLowerCase().equals("windows")) {
				website = "https://github.com/offensive-security/exploit-database/tree/master/exploits/windows_x86";
			} else if (operatingSystem.toLowerCase().equals("linux")) {
				website = "https://github.com/offensive-security/exploit-database/tree/master/exploits/linux_x86";
			}
		}
		mainScan(website, operatingSystem, "td.content");
	}
}
